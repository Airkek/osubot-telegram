# Telegram token from @BotFather
TELEGRAM_TOKEN=654321:BOT_TOKEN_EXAMPLE

# Bot owner's telegram id
TELEGRAM_OWNER_ID=123456

# Should bot use webhooks over polling?
USE_WEBHOOKS=false

# expressjs app port, used for webhooks
APP_PORT=3000

# webhook endpoint
WEBHOOK_ENDPOINT=http://osubot:3000

### Local Bot Api settings
# before using local bot api be sure you logged out from official api and vice versa:
# GET https://api.telegram.org/bot<token>/logOut
#
# should use local bot api
TELEGRAM_USE_LOCAL_API=true
#
# local bot api server
TELEGRAM_LOCAL_API_HOST=http://telegram_api:8081
#
# credentials (for docker compose only)
# https://core.telegram.org/api/obtaining_api_id
TELEGRAM_APP_API_ID=12345
TELEGRAM_APP_API_HASH=0123456789abcdef1234567890abcdef
#
# Filter: Allow only bots with 'bot_user_id % modulo == remainder'
TELEGRAM_LOCAL_API_FILTER_MODULO=1
TELEGRAM_LOCAL_API_FILTER_REMAINDER=0
#
# Maximum webhook connections per bot
TELEGRAM_LOCAL_API_MAX_WEBHOOK_CONNECTIONS=100
###

# osu! api v2 credentials
OSU_V2_APP_ID=12345
OSU_V2_CLIENT_SECRET=secret

# Should bot render .osr replays (boolean)
RENDER_REPLAYS=false

# Experimental renderer
EXPERIMENTAL_RENDERER_BASE_URL=http://experimental_render:9732

# https://ordr.issou.best, for replays render
ORDR_USERNAME=osubot-telegram
ORDR_API_KEY=123456asdfg

# PostgreSQL credentials
DB_USERNAME=example_user
DB_PASSWORD=example_password
DB_DATABASE_NAME=osubot_telegram
DB_PORT=5432
DB_HOST=database

# Docker Compose specific
BOT_DATA_PATH=./osubot_data
TELEGRAM_API_DATA_PATH=./local_bot_api_data
OSU_BEATMAP_CACHE=./beatmap_cache
DB_DATA_LOCATION=./osubot_postgres